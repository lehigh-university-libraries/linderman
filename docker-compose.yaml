---
networks:
  default:
    ipam:
      config:
        - subnet: 172.18.0.0/16
          gateway: 172.18.0.1
volumes:
  mariadb-data: {}

services:
  gate-counts:
    image: ghcr.io/lehigh-university-libraries/ole-gate-count:main
    environment:
      OLE_GATE_URLS: ${OLE_GATE_URLS}
    secrets:
      - source: OLE_DB_PASSWORD
    depends_on:
      - mariadb
      - traefik
  mariadb:
    image: mariadb:12.0.2@sha256:b30cc65b57a11a2e791ad5c06284e599fe9f1bf3fe9081a88d85bcf36389be4a
    volumes:
      - mariadb-data:/var/lib/mysql:rw
    environment:
      MARIADB_ROOT_PASSWORD_FILE: /run/secrets/MARIADB_ROOT_PASSWORD
    secrets:
      - source: MARIADB_ROOT_PASSWORD
    networks:
      default:
        ipv4_address: 172.18.0.10
  shelf-reading:
    image: ghcr.io/lehigh-university-libraries/folio-offline-shelf-reading:${SHELF_READING_TAG:-main}
    environment:
      # tell gunicorn/flask we're putting this behind a path
      SCRIPT_NAME: /shelf-reading
      TZ: America/New_York
    healthcheck:
      start_period: 1s
  folio-shelving-order:
    image: ghcr.io/lehigh-university-libraries/folio-shelving-order:${SHELVING_ORDER_TAG:-main}
    healthcheck:
      start_period: 1s
  rollout:
    image: ghcr.io/lehigh-university-libraries/rollout:main
    restart: always
    volumes:
      # need access to this code so we can run git pull
      # and/or docker compose commands
      - ./:/opt/linderman
      # need to auth to the docker CLI
      - /root/.docker:/root/.docker:ro
      # need git SSH auth
      - /root/.ssh:/root/.ssh
      # need access to docker daemon
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      JWKS_URI: "https://token.actions.githubusercontent.com/.well-known/jwks"
      JWT_AUD: "https://github.com/lehigh-university-libraries"
      ROLLOUT_LOCK_FILE: /opt/linderman/rollout.lock
      HOSTNAME: ${HOSTNAME}
      DOMAIN: localhost
      SLACK_WEBHOOK: ${SLACK_WEBHOOK}
      # the script to run when we want to deploy new code
      ROLLOUT_ARGS: /opt/linderman/scripts/maintenance/rollout.sh
    healthcheck:
      start_period: 1s
  traefik:
    image: traefik:v3.4.0@sha256:4cf907247939b5d20bf4eff73abd21cb413c339600dde76dbc94a874b2578a27
    restart: always
    command: >-
      --api.insecure=true
      --api.dashboard=true
      --api.debug=true
      --ping=true
      --entryPoints.http.address=:80
      --entryPoints.https.address=:443
      --entryPoints.https.forwardedHeaders.trustedIPs=128.180.1.79/32,128.180.1.80/32,128.180.6.212/32,128.180.6.203/32,172.0.0.0/8
      --entryPoints.https.transport.respondingTimeouts.readTimeout=3600
      --providers.file.filename=/etc/traefik/config.yaml
      --providers.file.watch=true
      --providers.docker=true
      --providers.docker.network=default
      --providers.docker.exposedByDefault=false
      --experimental.localPlugins.ldapAuth.moduleName=github.com/lehigh-university-libraries/ldapAuth
    environment:
      DOMAIN: localhost
      SHELF_READING_ALLOWED_USERS: ${SHELF_READING_ALLOWED_USERS}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # mount our ldap auth middleware
      - ./conf/traefik/plugins/ldapAuth:/plugins-local/src/github.com/lehigh-university-libraries/ldapAuth:r
      - ./certs:/etc/ssl/traefik:Z,ro
      - ./conf/traefik/config.tmpl:/etc/traefik/config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock:z
    healthcheck:
      test: traefik healthcheck --ping
      start_period: 5s
    networks:
      default:
        aliases:
          - localhost

secrets:
  MARIADB_ROOT_PASSWORD:
    file: "./secrets/MARIADB_ROOT_PASSWORD"
  OLE_DB_PASSWORD:
    file: "./secrets/ole/MARIADB_PASSWORD"
